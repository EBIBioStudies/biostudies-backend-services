buildscript {
    ext {
        junitVersion = "5.2.0"
        junitPlatformVersion = "1.2.0"
        springBootVersion = '2.0.4.RELEASE'
        kotlinVersion = '1.2.61'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'kotlin-spring'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile project(":persistence")
    compile project(":submitter")
    compile project(":serialization")
    compile project(":commons-util")

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-configuration-processor'

    compile('mysql:mysql-connector-java:6.0.6')
    compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")

    testCompile('org.assertj:assertj-core:3.11.0')

    // Junit dependencies
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testRuntime "org.junit.platform:junit-platform-console:$junitPlatformVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testCompile 'org.springframework.boot:spring-boot-starter-test'

}

sourceSets {
    itest {
        kotlin {
            compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
            runtimeClasspath += output + compileClasspath
        }
    }
}

configurations {
    itestCompile.extendsFrom testCompile
    itestRuntime.extendsFrom testRuntime
}

task itest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.itest.output.classesDirs
    classpath = sourceSets.itest.runtimeClasspath
}
