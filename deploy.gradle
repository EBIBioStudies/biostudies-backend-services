remotes {
    dev {
        host = System.getenv("DEV_SERVER")
        user = System.getenv("BS_USER")
    }

    codon {
        host = System.getenv("CODON_SERVER")
        user = System.getenv("BS_USER")
    }

    beta {
        host = System.getenv("BETA_SERVER")
        user = System.getenv("BS_USER")
    }

    prod {
        host = System.getenv("PROD_SERVER")
        user = System.getenv("BS_USER")
    }

    sandbox {
        host = System.getenv("SANDBOX_SERVER")
        user = System.getenv("BS_USER")
    }
}

ssh.settings {
    knownHosts = allowAnyHosts
    identity = System.getenv("BS_SSH_KEY")
    logging = "stdout"
}

task deploySubmitter {
    doFirst {
        project.ext.artifactPath = "submission/submission-webapp/build/libs"
        project.ext.artifactName = "submission-webapp-1.0.0.jar"
        project.ext.appPort = 8788
        project.ext.debugPort = 8003
    }

    finalizedBy "deploy"
}

task deployMigratorSubmitter {
    doFirst {
        project.ext.artifactPath = "submission/submission-webapp/build/libs"
        project.ext.artifactName = "submission-webapp-1.0.0.jar"
        project.ext.appPort = 8789
        project.ext.debugPort = 8083
    }

    finalizedBy "deploy"
}

task deployHandlers {
    doFirst {
        project.ext.artifactPath = "submission/submission-handlers/build/libs"
        project.ext.artifactName = "submission-handlers-1.0.0.jar"
        project.ext.appPort = 8392
        project.ext.debugPort = 8504
    }

    finalizedBy "deploy"
}


task deployScheduler {
    doFirst {
        project.ext.artifactPath = "scheduler/scheduler/build/libs"
        project.ext.artifactName = "scheduler-1.0.0.jar"
        project.ext.appPort = 8689
        project.ext.debugPort = 8104
    }

    finalizedBy "deploy"
}

task deployBioAdmin {
    doFirst {
        project.ext.artifactPath = "bio-admin/build/libs"
        project.ext.artifactName = "bio-admin-1.0.0.jar"
        project.ext.appPort = 8590
        project.ext.debugPort = 8205
    }

    finalizedBy "deploy"
}

task deployBioCommandLine {
    doFirst {
        project.ext.artifactPath = "client/bio-commandline/build/libs"
        project.ext.artifactName = "BioStudiesCLI-2.0.jar"
    }

    finalizedBy "deployArtifact"
}

task updatePmcArtifact {
    doFirst {
        project.ext.artifactPath = "scheduler/tasks/pmc-processor-task/build/libs"
        project.ext.artifactName = "pmc-processor-task-1.0.0.jar"
    }

    finalizedBy "deployArtifact"
}

task updateExporterArtifact {
    doFirst {
        project.ext.artifactPath = "scheduler/tasks/exporter-task/build/libs"
        project.ext.artifactName = "exporter-task-1.0.0.jar"
    }

    finalizedBy "deployArtifact"
}

task updateReleaserArtifact {
    doFirst {
        project.ext.artifactPath = "scheduler/tasks/submission-releaser-task/build/libs"
        project.ext.artifactName = "submission-releaser-task-1.0.0.jar"
    }

    finalizedBy "deployArtifact"
}

task updateMigratorArtifact {
    doFirst {
        project.ext.artifactPath = "scheduler/tasks/submission-migrator-task/build/libs"
        project.ext.artifactName = "submission-migrator-task-1.0.0.jar"
    }

    finalizedBy "deployArtifact"
}

task updateStatsReporterArtifact {
    doFirst {
        project.ext.artifactPath = "scheduler/tasks/stats-reporter-task/build/libs"
        project.ext.artifactName = "stats-reporter-task-1.0.0.jar"
    }

    finalizedBy "deployArtifact"
}

task updateSubmissionTaskArtifact {
    doFirst {
        project.ext.artifactPath = "submission/submission-task/build/libs"
        project.ext.artifactName = "submission-task-1.0.0.jar"
    }

    finalizedBy "deployArtifact"
}

task deployArtifact {
    doLast {
        ssh.run {
            session(remotes[env]) {
                put from: "$rootDir/$artifactPath/$artifactName", into: "$deployPath/$artifactName"
            }
        }
    }
}

task deploy {
    doLast {
        ssh.run {
            session(remotes[env]) {
                put from: "$rootDir/$artifactPath/$artifactName", into: "$deployPath/$artifactName"
                put from: "$rootDir/ci/update.sh", into: "$deployPath/update.sh"

                def user = execute "whoami"
                def host = execute "hostname -s"
                execute "sed -i -e 's~APP_PATH~$deployPath~g' $deployPath/update.sh"
                execute "sed -i -e 's~APP_PORT~$appPort~g' $deployPath/update.sh"
                execute "sed -i -e 's~APP_NAME~$artifactName~g' $deployPath/update.sh"
                execute "sed -i -e 's~DEBUG_PORT~$debugPort~g' $deployPath/update.sh"
                execute "sed -i -e 's~BS_USER~$user~g' $deployPath/update.sh"
                execute "sed -i -e 's~HOST~$host~g' $deployPath/update.sh"

                if (project.hasProperty("jvmParams")) {
                    execute "sed -i -e 's~JVM_PARAMS~$jvmParams~g' $deployPath/update.sh"
                } else {
                    execute "sed -i -e 's~JVM_PARAMS~~g' $deployPath/update.sh"
                }

                execute "chmod +x $deployPath/update.sh"
                execute "$deployPath/update.sh"
            }
        }
    }
}
