spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration
  boot:
    admin:
      client:
        enabled: false

  mvc:
    async:
      request-timeout: -1

  data:
    mongodb:
      database: # Mongo Database Name
      uri: # Mongo Database connection URL

  datasource:
    url: # MySQL Database connection URL
    username:
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    show-sql: false
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false

  rabbitmq:
    host: # RabbitMQ host
    username: # RabbitMQ user
    password: # RabbitMQ password
    port: # RabbitMQ port
    listener:
      direct:
        prefetch: 25
      simple:
        prefetch: 25

  servlet:
    multipart:
      max-file-size: 20GB
      max-request-size: 20GB
      location: ${app.tempDirPath}

server:
  tomcat:
    max-http-form-post-size: 50MB
    max-swallow-size: 50MB


logging:
  file:
    name: logs/application_logs.txt
  level:
    org.springframework.data.mongodb.core.convert.QueryMapper: ERROR # Disable to avoid mapping log population.

app:
  retrySubmission: false
  enablePropertiesLog: true
  consumers: 10 # number of processing queue consumers.
  maxConsumers: 15 # Max number of processing queue consumers.
  submissionPath: # Absolute path to the folder to be used as submission storage
  ftpPath: # Absolute path to the folder to be used ftp hardlinks
  tempDirPath: # Absolute path of the temp folder to store files
  requestFilesPath: # Base directory absolute path where request file list are stored.
  fireTempDirPath: # Absolute path of the temp folder for FIRE storage
  instanceBaseUrl: # Instance base url e.g. http://server.ebi.ac.uk:5541
  #subBasePath: # Allows to allocate submissions under different base path. Commented to avoid empty string binding.
  task:
    enableTaskMode: # Whether the task mode should be enabled
    jarLocation: # the submitter task jar location.
    logsLocation: # the submitter task logs location.
    configFilePath: # the submitter task application.yml file location.
    cluster:
      user: # cluster user
      key: # cluster ssh key path.
      server:  # cluster sever (to submit jobs from)
      logsPath: # path to place the logs of the dispatched jobs
  fire:
    host: # FIRE host
    username: # FIRE user
    password: # FIRE password
    version: v1.1
    s3:
      accessKey: # FIRE s3 access key
      secretKey: # FIRE s3 access key
      region: # Fire s3 region
      endpoint: # Fire s3 region
      bucket: # Fire s3 region
    retry:
      maxAttempts: 20
      initialInterval: 100
      multiplier: 2.0
      maxInterval: 120
  security:
    captchaKey: # Captcha validation token
    checkCaptcha: false
    tokenHash: # Token used for hash authentication
    environment: # Current application execution environment
    requireActivation: # Indicates whether a new user need activation before being used
    instanceKeys:
      dev: # Instance key for the submission tool DEV environment
      beta: # Instance key for the submission tool BETA environment
      prod: # Instance key for the submission tool PROD environment
    fileProperties:
      filesDirPath: # Absolute path to the folder to be used for the user/groups files
      magicDirPath: #  Absolute path to create user magic folder for dropbox simple access
      ftpDirPath: #  Absolute path of users ftp. Used to access file
      ftpUser: # the ftp user
      ftpPassword: # the ftp password
      ftpUrl: # the ftp url without port
      ftpPort: # the ftp port
  persistence:
    enableFire: true
    concurrency: # Number of files processed concurrently
  mongo:
    execute-migrations: true
    migration-package: ac.uk.ebi.biostd.persistence.doc.migrations
  validator:
    euToxRiskValidationApi: # EU-ToxRisk validation API
  notifications:
    requestQueue: submission-request-submitter-queue # queue used to handle request stages
    requestRoutingKey: bio.submission.requested # request messages routing key
  doi:
    endpoint: # DOI registration endpoint
    uiUrl: # The BioStudies UI URL which will be associated to the DOI record
    user: # User for the DOI service
    password: # Password for the DOI service
